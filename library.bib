Automatically generated by Mendeley Desktop 1.19.3
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@inproceedings{Zhang2010,
abstract = {The medical training systems based on virtual simulation are highly desired since minimally invasive surgical techniques have become popular to patients. The training system helps surgeon trainees to acquire, practice and evaluate their surgical skills, and the key component of such a system is to simulate the dynamic procedure such as 3D biological tissue deformation in surgical operation. In our paper, an improved mass-spring model is proposed to represent the biological tissue surface, during which the virtual spring is introduced and utilized to help compensate the weakness of the conventional mass-spring model. Then Verlet integration is adopted to calculate the position of mass points during the deformation process without explicit computation of the velocity values. Finally the bilinear interpolation method is employed to generate one smooth mesh to render the deformed tissue surface. To speed up the simulation performance for surgical tissue deformation, CUDA based GPU computing is adopted, while related data structures and algorithm are designed and implemented for the parallel computation. Our proposed method has been tested by experiments and it has the ability to generate realistic biological tissue deformation images in real time.},
author = {Zhang, Yuanyuan and Zhao, Jianhui and Yuan, Zhiyong and Ding, Yihua and Long, Chengjiang and Xiong, Lu},
booktitle = {2010 International Conference on Biomedical Engineering and Computer Science, ICBECS 2010},
doi = {10.1109/ICBECS.2010.5462444},
isbn = {9781424453153},
keywords = {CUDA,Improved mass-spring model,Medical training,Tissue deformation},
title = {{CUDA based GPU programming to simulate 3D tissue deformation}},
year = {2010}
}
@inproceedings{Amorim2012,
abstract = {The mechanical behavior of the heart is guided by the propagation of an electrical wave, called action potential. Many diseases have multiple effects on both electrical and mechanical cardiac physiology. To support a better understanding of the multiscale and multiphysics processes involved in physiological and pathological cardiac conditions, a lot of work has been done in developing computational tools to simulate the electro-mechanical behavior of the heart. In this work, we propose a new user-friendly and efficient tool for the electro-mechanical simulation of the cardiac tissue that is based on cellular automata and mass-spring models. The proposed tool offers a user-friendly interface that allows one to interact with the simulation on-the-fly. In addition, the simulator is parallelized with CUDA and OpenMP to further speedup the execution time of the simulations. {\textcopyright} 2012 Springer-Verlag Berlin Heidelberg.},
author = {Amorim, Ronan Mendon{\c{c}}a and Campos, Ricardo Silva and Lobosco, Marcelo and Jacob, Christian and {Dos Santos}, Rodrigo Weber},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-642-33350-7-45},
isbn = {9783642333491},
issn = {03029743},
keywords = {Cardiac modeling,Cellular automata,Parallel computing},
title = {{An electro-mechanical cardiac simulator based on cellular automata and mass-spring models}},
year = {2012}
}
@inproceedings{Rasmusson2008,
abstract = {Since the advent of programmable graphics processors(GPUs) their computational powers have been utilized for general purpose computation. Initially by “exploiting” graphics APIs and recently through dedicated parallel computation frameworks such as the Compute Unified Device Architecture (CUDA) from Nvidia. This paper investigates multiple implementations of volumetric Mass-Spring-Damper systems inCUDA. The obtained performance is compared to previous implementations utilizing the GPU through the OpenGL graphics API.We find that both performance and optimization strategies differ widely between the OpenGL andCUDAimplementations. Specifically, the previous recommendation of using implicitly connected particles is replaced by a recommendation that supports unstructured meshes and run-time topological changes with an insignificant performance reduction.},
author = {Rasmusson, Allan and Mosegaard, Jesper and S{\o}rensen, Thomas Sangild},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-540-70521-5_6},
isbn = {3540705201},
issn = {03029743},
keywords = {GPGPU and Deformable Models,Mass-Spring-Damper Models},
title = {{Exploring parallel algorithms for volumetric Mass-Spring-Damper models in CUDA}},
year = {2008}
}
